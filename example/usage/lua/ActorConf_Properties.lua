------------------------------------------------------------
--      @file ActorConf_Properties.lua
--     @brief Auto generated by XlsxConverter, DO NOT EDIT!
--    @author VyronLee(lwz_jz@hotmail.com)
-- @Copyright Copyright(c) 2019, Apache-2.0
------------------------------------------------------------
local keys = {
	['id'] = {index=1,type="int",brief="职业ID"},
	['hp'] = {index=2,type="int",brief="初始HP"},
	['mp'] = {index=3,type="int",brief="初始MP"},
	['attack'] = {index=4,type="int",brief="初始攻击"},
	['defend'] = {index=5,type="int",brief="初始防御"},
}

local mt = {
	__index = function(t,k)
		return keys[k] and t[keys[k].index]
	end,
	__tostring = function(t)
		local ret = {}
		for k in pairs(keys) do
			if type(t[k]) == "number" then
				table.insert(ret, ("%s = %s"):format(k, t[k]))
			elseif type(t[k]) == "string" then
				table.insert(ret, ("%s = '%s'"):format(k, t[k]))
			end
		end
		return ("{%s}"):format(table.concat(ret, ", "))
	end,
}
local __mt = setmetatable

local conf = {}

conf.data = {
	[1] = __mt({1,100,50,10,10,}, mt),
	[2] = __mt({2,80,200,12,8,}, mt),
	[3] = __mt({3,80,100,15,5,}, mt),
}

conf.indexes = {
	['id'] = {
		['1'] = {1},
		['2'] = {2},
		['3'] = {3},
	},
}

local printable = {
	__tostring = function(t)
		local ret = {}
		for _, v in ipairs(t) do
			table.insert(ret, tostring(v))
		end
		return table.concat(ret, "\n")
	end
}

conf.parseArgs = function(self, ...)
	local keys, values = {}, {}
	local args = { ... }
	for idx,val in ipairs(args) do
		if idx % 2 == 1 then
			keys[#keys + 1] = val
		else
			values[#values + 1] = val
		end
	end
	return keys, values
end

conf.getData = function(self, ...)
	local ret
	if select("#", ...) > 0 then
		local keys, values = self:parseArgs(...)
		local keyHash = table.concat(keys, '-')
		local valueHash = table.concat(values, '-')
		local keyMap = self.indexes[keyHash] or {}
		local valueMap = keyMap[valueHash] or {}
		ret  = {}
		for idx,val in ipairs(valueMap) do
			ret[#ret + 1] = self.data[val]
		end
	else
		ret = self.data
	end
	return __mt(ret, printable)
end

return conf