// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: EquipmentConf_Properties.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace XlsxConvert.Auto.EquipmentConf {

  /// <summary>Holder for reflection information generated from EquipmentConf_Properties.proto</summary>
  public static partial class EquipmentConfPropertiesReflection {

    #region Descriptor
    /// <summary>File descriptor for EquipmentConf_Properties.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EquipmentConfPropertiesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5FcXVpcG1lbnRDb25mX1Byb3BlcnRpZXMucHJvdG8SC1hsc3hDb252ZXJ0",
            "Il4KH0VxdWlwbWVudENvbmZfUHJvcGVydGllc19SZWNvcmQSCgoCaWQYASAB",
            "KAUSDwoHcXVhbGl0eRgCIAEoBRIOCgZhdHRhY2sYAyABKAUSDgoGZGVmZW5k",
            "GAQgASgFIlwKHkVxdWlwbWVudENvbmZfUHJvcGVydGllc19TaGVldBI6CgRk",
            "YXRhGAEgAygLMiwuWGxzeENvbnZlcnQuRXF1aXBtZW50Q29uZl9Qcm9wZXJ0",
            "aWVzX1JlY29yZEIhqgIeWGxzeENvbnZlcnQuQXV0by5FcXVpcG1lbnRDb25m",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::XlsxConvert.Auto.EquipmentConf.EquipmentConf_Properties_Record), global::XlsxConvert.Auto.EquipmentConf.EquipmentConf_Properties_Record.Parser, new[]{ "Id", "Quality", "Attack", "Defend" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XlsxConvert.Auto.EquipmentConf.EquipmentConf_Properties_Sheet), global::XlsxConvert.Auto.EquipmentConf.EquipmentConf_Properties_Sheet.Parser, new[]{ "Data" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// [START messages]
  /// </summary>
  public sealed partial class EquipmentConf_Properties_Record : pb::IMessage<EquipmentConf_Properties_Record> {
    private static readonly pb::MessageParser<EquipmentConf_Properties_Record> _parser = new pb::MessageParser<EquipmentConf_Properties_Record>(() => new EquipmentConf_Properties_Record());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EquipmentConf_Properties_Record> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XlsxConvert.Auto.EquipmentConf.EquipmentConfPropertiesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentConf_Properties_Record() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentConf_Properties_Record(EquipmentConf_Properties_Record other) : this() {
      id_ = other.id_;
      quality_ = other.quality_;
      attack_ = other.attack_;
      defend_ = other.defend_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentConf_Properties_Record Clone() {
      return new EquipmentConf_Properties_Record(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "quality" field.</summary>
    public const int QualityFieldNumber = 2;
    private int quality_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Quality {
      get { return quality_; }
      set {
        quality_ = value;
      }
    }

    /// <summary>Field number for the "attack" field.</summary>
    public const int AttackFieldNumber = 3;
    private int attack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Attack {
      get { return attack_; }
      set {
        attack_ = value;
      }
    }

    /// <summary>Field number for the "defend" field.</summary>
    public const int DefendFieldNumber = 4;
    private int defend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Defend {
      get { return defend_; }
      set {
        defend_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EquipmentConf_Properties_Record);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EquipmentConf_Properties_Record other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Quality != other.Quality) return false;
      if (Attack != other.Attack) return false;
      if (Defend != other.Defend) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Quality != 0) hash ^= Quality.GetHashCode();
      if (Attack != 0) hash ^= Attack.GetHashCode();
      if (Defend != 0) hash ^= Defend.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Quality != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Quality);
      }
      if (Attack != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Attack);
      }
      if (Defend != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Defend);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Quality != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quality);
      }
      if (Attack != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Attack);
      }
      if (Defend != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Defend);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EquipmentConf_Properties_Record other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Quality != 0) {
        Quality = other.Quality;
      }
      if (other.Attack != 0) {
        Attack = other.Attack;
      }
      if (other.Defend != 0) {
        Defend = other.Defend;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Quality = input.ReadInt32();
            break;
          }
          case 24: {
            Attack = input.ReadInt32();
            break;
          }
          case 32: {
            Defend = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EquipmentConf_Properties_Sheet : pb::IMessage<EquipmentConf_Properties_Sheet> {
    private static readonly pb::MessageParser<EquipmentConf_Properties_Sheet> _parser = new pb::MessageParser<EquipmentConf_Properties_Sheet>(() => new EquipmentConf_Properties_Sheet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EquipmentConf_Properties_Sheet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XlsxConvert.Auto.EquipmentConf.EquipmentConfPropertiesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentConf_Properties_Sheet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentConf_Properties_Sheet(EquipmentConf_Properties_Sheet other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentConf_Properties_Sheet Clone() {
      return new EquipmentConf_Properties_Sheet(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::XlsxConvert.Auto.EquipmentConf.EquipmentConf_Properties_Record> _repeated_data_codec
        = pb::FieldCodec.ForMessage(10, global::XlsxConvert.Auto.EquipmentConf.EquipmentConf_Properties_Record.Parser);
    private readonly pbc::RepeatedField<global::XlsxConvert.Auto.EquipmentConf.EquipmentConf_Properties_Record> data_ = new pbc::RepeatedField<global::XlsxConvert.Auto.EquipmentConf.EquipmentConf_Properties_Record>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::XlsxConvert.Auto.EquipmentConf.EquipmentConf_Properties_Record> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EquipmentConf_Properties_Sheet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EquipmentConf_Properties_Sheet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EquipmentConf_Properties_Sheet other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
